From 81b5c8141aeb76e58edd13d9a89629e2b14dbf5a Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sat, 27 May 2023 06:41:32 -0400
Subject: [PATCH 5/7] Add properties to disable some features/commands/states
 that the ble chip declared but doesnt actually support

---
 system/gd/hci/controller.cc | 53 ++++++++++++++++++++++++++++++++++---
 1 file changed, 50 insertions(+), 3 deletions(-)

diff --git a/system/gd/hci/controller.cc b/system/gd/hci/controller.cc
index edf907a..0b9dbb4 100644
--- a/system/gd/hci/controller.cc
+++ b/system/gd/hci/controller.cc
@@ -34,6 +34,7 @@
 #include "os/metrics.h"
 #include "os/system_properties.h"
 #include "sysprops/sysprops_module.h"
+using bluetooth::os::GetSystemProperty;
 
 namespace bluetooth {
 namespace hci {
@@ -341,7 +342,25 @@ struct Controller::impl {
     ErrorCode status = complete_view.GetStatus();
     ASSERT_LOG(status == ErrorCode::SUCCESS, "Status 0x%02hhx, %s", status, ErrorCodeText(status).c_str());
     uint8_t page_number = complete_view.GetPageNumber();
-    extended_lmp_features_array_.push_back(complete_view.GetExtendedLmpFeatures());
+
+    //extended_lmp_features_array_.push_back(complete_view.GetExtendedLmpFeatures());
+    auto lmp_features = complete_view.GetExtendedLmpFeatures();
+
+    std::string ignored_features = GetSystemProperty("persist.sys.bt.unsupported.ogfeatures").value_or("");
+
+    if (ignored_features != "") {
+        auto s = base::SplitString(ignored_features, ",", base::TRIM_WHITESPACE, base::SPLIT_WANT_ALL);
+        int offset = page_number * 64;
+        for(auto feature: s) {
+            int index = std::stoi(feature) - offset;
+            if(index >= 0 && index < 64) {
+                LOG_WARN("Ignoring local supported feature %d", index);
+                lmp_features &= ~(1ULL << index);
+            }
+        }
+    }
+    extended_lmp_features_array_.push_back(lmp_features);
+
     bluetooth::os::LogMetricBluetoothLocalSupportedFeatures(page_number, complete_view.GetExtendedLmpFeatures());
     // Query all extended features
     if (page_number < complete_view.GetMaximumPageNumber()) {
@@ -494,7 +513,21 @@ struct Controller::impl {
     ASSERT(complete_view.IsValid());
     ErrorCode status = complete_view.GetStatus();
     ASSERT_LOG(status == ErrorCode::SUCCESS, "Status 0x%02hhx, %s", status, ErrorCodeText(status).c_str());
-    le_local_supported_features_ = complete_view.GetLeFeatures();
+
+    //le_local_supported_features_ = complete_view.GetLeFeatures();
+    auto local_features = complete_view.GetLeFeatures();
+    std::string ignored_features = GetSystemProperty("persist.sys.bt.unsupported.lefeatures").value_or("");
+
+    if (ignored_features != "") {
+        auto s = base::SplitString(ignored_features, ",", base::TRIM_WHITESPACE, base::SPLIT_WANT_ALL);
+        for(auto feature: s) {
+            int index = std::stoi(feature);
+            LOG_WARN("Ignoring local supported feature %d", index);
+            local_features &= ~(1ULL << index);
+        }
+    }
+
+    le_local_supported_features_ = local_features;
   }
 
   void le_read_supported_states_handler(CommandCompleteView view) {
@@ -502,7 +535,21 @@ struct Controller::impl {
     ASSERT(complete_view.IsValid());
     ErrorCode status = complete_view.GetStatus();
     ASSERT_LOG(status == ErrorCode::SUCCESS, "Status 0x%02hhx, %s", status, ErrorCodeText(status).c_str());
-    le_supported_states_ = complete_view.GetLeStates();
+    //le_supported_states_ = complete_view.GetLeStates();
+
+    auto local_states = complete_view.GetLeStates();
+    std::string ignored_states = GetSystemProperty("persist.sys.bt.unsupported.states").value_or("");
+
+    if (ignored_states != "") {
+        auto s = base::SplitString(ignored_states, ",", base::TRIM_WHITESPACE, base::SPLIT_WANT_ALL);
+        for(auto state: s) {
+            int index = std::stoi(state);
+            LOG_WARN("Ignoring local supported state %d", index);
+            local_states &= ~(1ULL << index);
+        }
+    }
+
+    le_supported_states_ = local_states;
   }
 
   void le_read_accept_list_size_handler(CommandCompleteView view) {
-- 
2.34.1

