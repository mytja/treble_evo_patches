From 1df79c3a86a648973caf318c1a62282bf61a242f Mon Sep 17 00:00:00 2001
From: mytja <mitja@severkar.eu>
Date: Sun, 8 Sep 2024 14:51:25 +0200
Subject: [PATCH 5/7] fix: we only need ParanoidSense as Face Unlock provider

Co-authored-by: Alberto Ponces <ponces26@gmail.com>
---
 .../biometrics/sensors/face/FaceService.java  | 31 -------------------
 1 file changed, 31 deletions(-)

diff --git a/services/core/java/com/android/server/biometrics/sensors/face/FaceService.java b/services/core/java/com/android/server/biometrics/sensors/face/FaceService.java
index 1d41f52cad8c..08caa649ebf3 100644
--- a/services/core/java/com/android/server/biometrics/sensors/face/FaceService.java
+++ b/services/core/java/com/android/server/biometrics/sensors/face/FaceService.java
@@ -696,44 +696,13 @@ public class FaceService extends SystemService {
             return providers;
         }
 
-        private List<ServiceProvider> getSenseProviders() {
-            final List<ServiceProvider> providers = new ArrayList<>();
-            if (SenseUtils.canUseProvider()) {
-                FaceSensorPropertiesInternal props = new FaceSensorPropertiesInternal(
-                        SenseProvider.DEVICE_ID,
-                        SensorProperties.STRENGTH_WEAK,
-                        1, /** maxEnrollmentsPerUser **/
-                        new ArrayList(),
-                        FaceSensorProperties.TYPE_RGB,
-                        false, /** supportsFaceDetection **/
-                        false, /** supportsSelfIllumination **/
-                        false); /** resetLockoutRequiresChallenge **/
-                SenseProvider provider = new SenseProvider(getContext(), mBiometricStateCallback, props, mLockoutResetDispatcher);
-                providers.add(provider);
-            }
-            return providers;
-        }
-
         @android.annotation.EnforcePermission(android.Manifest.permission.USE_BIOMETRIC_INTERNAL)
         public void registerAuthenticators(
                 @NonNull List<FaceSensorPropertiesInternal> hidlSensors) {
             super.registerAuthenticators_enforcePermission();
 
             mRegistry.registerAll(() -> {
-                List<String> aidlSensors = new ArrayList<>();
-                final String[] instances = mAidlInstanceNameSupplier.get();
-                if (instances != null) {
-                    aidlSensors.addAll(Lists.newArrayList(instances));
-                }
-
-                final Pair<List<FaceSensorPropertiesInternal>, List<String>>
-                        filteredInstances = filterAvailableHalInstances(hidlSensors, aidlSensors);
-
                 final List<ServiceProvider> providers = new ArrayList<>();
-                /*
-                providers.addAll(getHidlProviders(filteredInstances.first));
-                providers.addAll(getAidlProviders(filteredInstances.second));
-                */
                 providers.addAll(getSenseProviders());
                 return providers;
             });
-- 
2.25.1

